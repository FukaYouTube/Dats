// file system
const fs = require('fs')

// Use telegraf technology
const { keyboard, inlineKeyboard, callbackButton } = require('telegraf/markup')

exports.editLanguageMessage = (ctx) => {
    ctx.replyWithMarkdown('–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ | Choose language | –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑', inlineKeyboard([
        [callbackButton('üá∑üá∫ –†—É—Å–∫–∏–π —è–∑—ã–∫', 'ru_language')],
        [callbackButton('üá∞üáø “ö–∞–∑–∞“õ —Ç—ñ–ª—ñ', 'kz_language')],
        [callbackButton('üá∫üá∏ English language', 'eng_language')]
    ]).extra())
}

exports.editLanguage = (ctx, type_lang) => {
    let message = JSON.parse(fs.readFileSync(`source/messages/msg.${ctx.session.lang || "ru"}.json`))

    switch(type_lang){
        case 'ru':
        ctx.deleteMessage()
        ctx.session.lang = 'ru'
        ctx.replyWithMarkdown('‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫', keyboard([ message["back-menu"] ]).oneTime().resize().extra())
        break
        case 'kz':
        ctx.deleteMessage()
        ctx.session.lang = 'ru'
        ctx.replyWithMarkdown('‚ùå –ö–µ—à—ñ—Ä—ñ“£—ñ–∑, “õ–∞—Ç–µ –ø–∞–π–¥–∞ –±–æ–ª–¥—ã', keyboard([ message["back-menu"] ]).oneTime().resize().extra())
        break
        case 'eng':
        ctx.deleteMessage()
        ctx.session.lang = 'ru'
        ctx.replyWithMarkdown('‚ùå Sorry, an error occurred', keyboard([ message["back-menu"] ]).oneTime().resize().extra())
        break
    }
}